version: '3'
services:
  
  #MySQL Service
  db:
    image: mysql:5.7.22
    container_name: golang-db
    restart: unless-stopped
    tty: true
    ports:
    - "3309:3306"
    expose:
    - "3306"
    environment:
      MYSQL_DATABASE: go_db
      MYSQL_ROOT_PASSWORD: root
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
    - dbdata:/var/lib/mysql/
    - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
    - app-network

  # App Service
  app:
    container_name: golang-app
    build:
      context: .
      dockerfile: docker/golang/Dockerfile
    ports:
      - "3001:3001"
    expose:
    - "3001"
    volumes:
      - ./:/app
    restart: unless-stopped
    depends_on: 
      - redis
      - db
    environment:
      REDIS_URL: redis:6379    
    networks:
      - app-network
  
  #webpack node
  client:
    container_name: golang_client
    build:
      context: .
      dockerfile: docker/webpack_npm/Dockerfile
    volumes:
      - ./client/:/app
      - /app/node_modules
    ports:
      - "2001:2001"
    expose:
      - "2001"
    environment:
      - NODE_ENV=development
    # depends_on:
    #   - app

  #Redis Service   
  redis:
    image: "redis:alpine" # Use a public Redis image to build the redis service    
    restart: unless-stopped
    container_name: redis-container
    ports:
    - "63791:6379"
    expose:
    - "6379"
    networks:
      - app-network

#Docker Networks
networks:
  app-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local